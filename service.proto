/*
 * Copyright 2000-2019 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.
 */

syntax = "proto3";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option java_package = "org.jetbrains.r.rinterop";
option java_multiple_files = true;

package rplugininterop;

service RPIService {
  rpc getInfo(google.protobuf.Empty) returns (GetInfoResponse) {}
  rpc isBusy(google.protobuf.Empty) returns (google.protobuf.BoolValue) {}

  rpc init(Init) returns (stream CommandOutput) {}
  rpc quit(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc quitProceed(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  rpc executeCode(ExecuteCodeRequest) returns (stream ExecuteCodeResponse) {}
  rpc sendReadLn(google.protobuf.StringValue) returns (google.protobuf.Empty) {}
  rpc sendEof(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc replInterrupt(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc getAsyncEvents(google.protobuf.Empty) returns (stream AsyncEvent) {}

  // Debugger
  rpc debugAddOrModifyBreakpoint(DebugAddOrModifyBreakpointRequest) returns (google.protobuf.Empty) {}
  rpc debugSetMasterBreakpoint(DebugSetMasterBreakpointRequest) returns (google.protobuf.Empty) {}
  rpc debugRemoveBreakpoint(google.protobuf.Int32Value) returns (google.protobuf.Empty) {}
  rpc debugCommandContinue(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc debugCommandPause(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc debugCommandStop(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc debugCommandStepOver(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc debugCommandStepInto(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc debugCommandStepIntoMyCode(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc debugCommandStepOut(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc debugCommandRunToPosition(SourcePosition) returns (google.protobuf.Empty) {}
  rpc debugMuteBreakpoints(google.protobuf.BoolValue) returns (google.protobuf.Empty) {}
  rpc getFunctionSourcePosition(RRef) returns (GetFunctionSourcePositionResponse) {}
  rpc getSourceFileText(google.protobuf.StringValue) returns (google.protobuf.StringValue) {}
  rpc getSourceFileName(google.protobuf.StringValue) returns (google.protobuf.StringValue) {}

  // Graphics device service points
  rpc graphicsInit(GraphicsInitRequest) returns (stream CommandOutput) {}
  rpc graphicsDump(google.protobuf.Empty) returns (GraphicsDumpResponse) {}
  rpc graphicsRescale(GraphicsRescaleRequest) returns (stream CommandOutput) {}
  rpc graphicsRescaleStored(GraphicsRescaleStoredRequest) returns (stream CommandOutput) {}
  rpc graphicsSetParameters(ScreenParameters) returns (google.protobuf.Empty) {}
  rpc graphicsGetSnapshotPath(GraphicsGetSnapshotPathRequest) returns (GraphicsGetSnapshotPathResponse) {}
  rpc graphicsFetchPlot(google.protobuf.Int32Value) returns (GraphicsFetchPlotResponse) {}
  rpc graphicsCreateGroup(google.protobuf.Empty) returns (stream CommandOutput) {}
  rpc graphicsRemoveGroup(google.protobuf.StringValue) returns (stream CommandOutput) {}
  rpc graphicsShutdown(google.protobuf.Empty) returns (stream CommandOutput) {}

  // RMarkdown chunks
  rpc beforeChunkExecution(ChunkParameters) returns (stream CommandOutput) {}
  rpc afterChunkExecution(google.protobuf.Empty) returns (stream CommandOutput) {}
  rpc pullChunkOutputPaths(google.protobuf.Empty) returns (StringList) {}

  // Repo utils service points
  rpc repoGetPackageVersion(google.protobuf.StringValue) returns (stream CommandOutput) {}
  rpc repoInstallPackage(RepoInstallPackageRequest) returns (google.protobuf.Empty) {}
  rpc repoAddLibraryPath(google.protobuf.StringValue) returns (stream CommandOutput) {}
  rpc repoCheckPackageInstalled(google.protobuf.StringValue) returns (stream CommandOutput) {}
  rpc repoRemovePackage(RepoRemovePackageRequest) returns (google.protobuf.Empty) {}

  // Dataset import service points
  rpc previewDataImport(PreviewDataImportRequest) returns (stream CommandOutput) {}
  rpc commitDataImport(CommitDataImportRequest) returns (google.protobuf.Empty) {}

  // Methods for RRef and RVariableLoader
  rpc copyToPersistentRef(RRef) returns (CopyToPersistentRefResponse) {}
  rpc disposePersistentRefs(PersistentRefList) returns (google.protobuf.Empty) {}
  rpc loaderGetParentEnvs(RRef) returns (ParentEnvsResponse) {}
  rpc loaderGetVariables(GetVariablesRequest) returns (VariablesResponse) {}
  rpc loaderGetLoadedNamespaces(google.protobuf.Empty) returns (StringList) {}
  rpc loaderGetValueInfo(RRef) returns (ValueInfo) {}
  rpc evaluateAsText(RRef) returns (StringOrError) {}
  rpc evaluateAsBoolean(RRef) returns (google.protobuf.BoolValue) {}
  rpc getDistinctStrings(RRef) returns (StringList) {}
  rpc loadObjectNames(RRef) returns (StringList) {}
  rpc findInheritorNamedArguments(RRef) returns (StringList) {}
  rpc findExtraNamedArguments(RRef) returns (ExtraNamedArguments) {}
  rpc getS4ClassInfoByObjectName(RRef) returns (S4ClassInfo) {}
  rpc getR6ClassInfoByObjectName(RRef) returns (R6ClassInfo) {}
  rpc getTableColumnsInfo(TableColumnsInfoRequest) returns (TableColumnsInfo) {}
  rpc getFormalArguments(RRef) returns (StringList) {}
  rpc getEqualityObject(RRef) returns (google.protobuf.Int64Value) {}
  rpc setValue(SetValueRequest) returns (ValueInfo) {}
  rpc getObjectSizes(RRefList) returns (Int64List) {}

  rpc getRMarkdownChunkOptions(google.protobuf.Empty) returns (StringList) {}

  // Data frame viewer
  rpc dataFrameRegister(RRef) returns (google.protobuf.Int32Value) {}
  rpc dataFrameGetInfo(RRef) returns (DataFrameInfoResponse) {}
  rpc dataFrameGetData(DataFrameGetDataRequest) returns (DataFrameGetDataResponse) {}
  rpc dataFrameSort(DataFrameSortRequest) returns (google.protobuf.Int32Value) {}
  rpc dataFrameFilter(DataFrameFilterRequest) returns (google.protobuf.Int32Value) {}
  rpc dataFrameRefresh(RRef) returns (google.protobuf.BoolValue) {}

  // Documentation and http
  rpc convertRoxygenToHTML(ConvertRoxygenToHTMLRequest) returns (ConvertRoxygenToHTMLResponse) {}
  rpc httpdRequest(google.protobuf.StringValue) returns (HttpdResponse) {}
  rpc getDocumentationForPackage(google.protobuf.StringValue) returns (HttpdResponse) {}
  rpc getDocumentationForSymbol(DocumentationForSymbolRequest) returns (HttpdResponse) {}
  rpc startHttpd(google.protobuf.Empty) returns (google.protobuf.Int32Value) {}

  // Misc
  rpc getWorkingDir(google.protobuf.Empty) returns (google.protobuf.StringValue) {}
  rpc setWorkingDir(google.protobuf.StringValue) returns (google.protobuf.Empty) {}
  rpc clearEnvironment(RRef) returns (google.protobuf.Empty) {}
  rpc getSysEnv(GetSysEnvRequest) returns (StringList) {}
  rpc loadInstalledPackages(google.protobuf.Empty) returns (RInstalledPackageList) {}
  rpc loadLibPaths(google.protobuf.Empty) returns (RLibraryPathList) {}
  rpc loadLibrary(google.protobuf.StringValue) returns (google.protobuf.Empty) {}
  rpc unloadLibrary(UnloadLibraryRequest) returns (google.protobuf.Empty) {}
  rpc saveGlobalEnvironment(google.protobuf.StringValue) returns (google.protobuf.Empty) {}
  rpc loadEnvironment(LoadEnvironmentRequest) returns (google.protobuf.Empty) {}
  rpc setOutputWidth(google.protobuf.Int32Value) returns (google.protobuf.Empty) {}
  rpc clientRequestFinished(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc rStudioApiResponse(RObject) returns (google.protobuf.Empty) {}
  rpc setSaveOnExit(google.protobuf.BoolValue) returns (google.protobuf.Empty) {}
  rpc setRStudioApiEnabled(google.protobuf.BoolValue) returns (stream CommandOutput) {}
  rpc getLoadedShortS4ClassInfos(google.protobuf.Empty) returns (ShortS4ClassInfoList) {}
  rpc getS4ClassInfoByClassName(google.protobuf.StringValue) returns (S4ClassInfo) {}
  rpc getLoadedShortR6ClassInfos(google.protobuf.Empty) returns (ShortR6ClassInfoList) {}
  rpc getR6ClassInfoByClassName(google.protobuf.StringValue) returns (R6ClassInfo) {}
}

message Init {
  string projectDir = 1;
  string rScriptsPath = 2;

  string workspaceFile = 3;
  bool loadWorkspace = 4;
  bool saveOnExit = 5;
  string httpUserAgent = 6;
  bool enableRStudioApi = 7;
}

message GetInfoResponse {
  string rVersion = 1;
  int32 pid = 2;
}

message ExecuteCodeRequest {
  enum DebugCommand {
    CONTINUE = 0;
    STOP = 1;
    KEEP_PREVIOUS = 2;
  }
  string code = 1;
  string sourceFileId = 2;
  int32 sourceFileLineOffset = 3;
  int32 sourceFileFirstLineOffset = 4;
  bool withEcho = 5;
  bool streamOutput = 6;
  bool isRepl = 7;
  bool isDebug = 8;
  DebugCommand firstDebugCommand = 9;
  bool setLastValue = 10;
}

message CommandOutput {
  enum Type {
    STDOUT = 0;
    STDERR = 1;
  }
  Type type = 1;
  bytes text = 2;
}

message ExceptionInfo {
  string message = 1;
  string call = 2;
  oneof details {
    google.protobuf.Empty simpleError = 3;
    google.protobuf.Empty interrupted = 4;
    string packageNotFound = 5;
  }
}

message ExecuteCodeResponse {
  oneof msg {
    CommandOutput output = 1;
    string exception = 2;
  }
}

message StackFrame {
  SourcePosition position = 1;
  string functionName = 2;
  int64 equalityObject = 3;
  ExtendedSourcePosition extendedSourcePosition = 4;
  string sourcePositionText = 5;
}

message StackFrameList {
  repeated StackFrame frames = 1;
}

message RObject {
  message RString {
    repeated string strings = 1;
  }
  message RInt {
    repeated int64 ints = 1;
  }
  message RDouble {
    repeated double doubles = 1;
  }
  message List {
    repeated RObject rObjects = 1;
  }
  message RNull {}
  message RBoolean {
    repeated bool booleans = 1;
  }
  message KeyValue {
    string key = 1;
    RObject value = 2;
  }
  message NamedList {
    repeated KeyValue rObjects = 1;
  }
  oneof object {
    RString rString = 1;
    RInt rInt = 2;
    RDouble rDouble = 3;
    List list = 4;
    RNull rNull = 5;
    RBoolean rBoolean = 6;
    NamedList namedList = 7;
    string error = 8;
  }
}

message AsyncEvent {
  message RequestReadLn {
    string prompt = 1;
  }
  message DebugPrompt {
    bool changed = 1;
    StackFrameList stack = 2;
  }
  message ViewRequest {
    int32 persistentRefIndex = 1;
    string title = 2;
    ValueInfo value = 3;
  }
  message ViewTableRequest {
    int32 persistentRefIndex = 1;
    string title = 2;
  }
  message Exception {
    ExceptionInfo exception = 1;
    StackFrameList stack = 2;
  }
  message ShowFileRequest {
    string filePath = 1;
    string title = 2;
  }
  message RStudioApiRequest {
    int32 functionID = 1;
    RObject args = 2;
  }
  oneof event {
    google.protobuf.Empty busy = 1;
    CommandOutput text = 2;
    RequestReadLn requestReadLn = 3;
    google.protobuf.Empty prompt = 4;
    DebugPrompt debugPrompt = 5;
    google.protobuf.Empty termination = 6;
    Exception exception = 7;
    ViewRequest viewRequest = 8;
    ShowFileRequest showFileRequest = 9;
    HttpdResponse showHelpRequest = 10;
    google.protobuf.Empty subprocessInput = 11;
    string browseURLRequest = 12;
    RStudioApiRequest rStudioApiRequest = 13;
    int32 debugRemoveBreakpointRequest = 14;
    SourcePosition debugPrintSourcePositionToConsoleRequest = 15;
    ViewTableRequest viewTableRequest = 16;
  }
}

message SourcePosition {
  string fileId = 1;
  int32 line = 2;
}

message GetFunctionSourcePositionResponse {
  SourcePosition position = 1;
  string sourcePositionText = 2;
}

message ExtendedSourcePosition {
  int32 startLine = 1;
  int32 startOffset = 2;
  int32 endLine = 3;
  int32 endOffset = 4;
}

message DebugAddOrModifyBreakpointRequest {
  int32 id = 1;
  SourcePosition position = 2;
  bool enabled = 3;
  bool suspend = 4;
  string evaluateAndLog = 5;
  string condition = 6;
  bool removeAfterHit = 7;
  bool hitMessage = 8;
  bool printStack = 9;
}

message DebugSetMasterBreakpointRequest {
  int32 breakpointId = 1;
  oneof master {
    google.protobuf.Empty none = 2;
    int32 masterId = 3;
  }
  bool leaveEnabled = 4;
}

message RRef {
  message Member {
    RRef env = 1;
    string name = 2;
  }
  message ParentEnv {
    RRef env = 1;
    int32 index = 2;
  }
  message Expression {
    RRef env = 1;
    string code = 2;
  }
  message ListElement {
    RRef list = 1;
    int64 index = 2;
  }
  oneof ref {
    int32 persistentIndex = 1;
    google.protobuf.Empty globalEnv = 2;
    google.protobuf.Empty currentEnv = 3;
    int32 sysFrameIndex = 4;
    Member member = 5;
    ParentEnv parentEnv = 6;
    Expression expression = 7;
    ListElement listElement = 8;
    int32 errorStackSysFrameIndex = 9;
    RRef attributes = 10;
  }
}

message CopyToPersistentRefResponse {
  oneof response {
    int32 persistentIndex = 1;
    string error = 2;
  }
}

message PersistentRefList {
  repeated int32 indices = 1;
}

message ParentEnvsResponse {
  message EnvInfo {
    string name = 1;
  }
  repeated EnvInfo envs = 1;
}

message GetVariablesRequest {
  RRef obj = 1;
  int64 start = 2;
  int64 end = 3;
  // These parameters are for environments only
  bool noHidden = 4;
  bool noFunctions = 5;
  bool onlyFunctions = 6;
}

message VariablesResponse {
  message Variable {
    string name = 1;
    ValueInfo value = 2;
  }
  bool isEnv = 1;
  int64 totalCount = 2;
  repeated Variable vars = 3;
}

message ValueInfo {
  message Unevaluated {
    string code = 1;
  }
  message Value {
    string textValue = 1;
    bool isComplete = 2;
    bool isVector = 3;
    bool isS4 = 4;
    bool isR6 = 5;
  }
  message List {
    int64 length = 1;
  }
  message DataFrame {
    int32 rows = 1;
    int32 cols = 2;
  }
  message Function {
    string header = 1;
  }
  message Environment {
    string name = 1;
  }
  message Error {
    string text = 1;
  }
  message Matrix {
    repeated int32 dim = 1;
  }
  repeated string cls = 1;
  oneof info {
    Unevaluated unevaluated = 2;
    Value value = 3;
    List list = 4;
    DataFrame dataFrame = 5;
    Function function = 6;
    Environment environment = 7;
    google.protobuf.Empty graph = 8;
    Error error = 9;
    Matrix matrix = 10;
  }
}

message StringList {
  repeated string list = 1;
}

message Int32List {
  string message = 1;
  repeated int32 value = 2;
}

message GraphicsInstallRequest {
  string packagePath = 1;
  string libraryPath = 2;
  string packageType = 3;
}

message ScreenParameters {
  int32 width = 1;
  int32 height = 2;
  int32 resolution = 3;
}

message GraphicsInitRequest {
  ScreenParameters screenParameters = 1;
  bool inMemory = 2;
}

message GraphicsDumpResponse {
  string message = 1;
  map<int32, ScreenParameters> number2Parameters = 2;
}

message GraphicsRescaleRequest {
  int32 snapshotNumber = 1;
  ScreenParameters newParameters = 2;
}

message GraphicsRescaleStoredRequest {
  string groupId = 1;
  int32 snapshotNumber = 2;
  int32 snapshotVersion = 3;
  ScreenParameters newParameters = 4;
}

message GraphicsGetSnapshotPathRequest {
  string groupId = 1;
  int32 snapshotNumber = 2;
}

message GraphicsGetSnapshotPathResponse {
  string message = 1;
  string snapshotName = 2;
  string directory = 3;
}

message Font {
  string name = 1;
  float size = 2;
  int32 style = 3;
}

message Stroke {
  float width = 1;
  int32 cap = 2;
  int32 join = 3;
  float miterLimit = 4;
  int32 pattern = 5;
}

message Polyline {
  repeated fixed64 point = 1;
  int32 previewCount = 2;
}

message RasterImage {
  int32 width = 1;
  int32 height = 2;
  bytes data = 3;  // little-endian uint32[] ARGB
}

message FixedViewport {
  float ratio = 1;
  float delta = 2;
  int32 parentIndex = 3;
}

message FreeViewport {
  fixed64 from = 1;
  fixed64 to = 2;
  int32 parentIndex = 3;
}

message Viewport {
  oneof kind {
    FixedViewport fixed = 1;
    FreeViewport free = 2;
  }
}

message CircleFigure {
  fixed64 center = 1;
  fixed32 radius = 2;
  int32 strokeIndex = 3;
  int32 colorIndex = 4;
  int32 fillIndex = 5;
}

message LineFigure {
  fixed64 from = 1;
  fixed64 to = 2;
  int32 strokeIndex = 3;
  int32 colorIndex = 4;
}

message PathFigure {
  repeated Polyline subPath = 1;
  bool winding = 2;
  int32 strokeIndex = 3;
  int32 colorIndex = 4;
  int32 fillIndex = 5;
}

message PolygonFigure {
  Polyline polyline = 1;
  int32 strokeIndex = 2;
  int32 colorIndex = 3;
  int32 fillIndex = 4;
}

message PolylineFigure {
  Polyline polyline = 1;
  int32 strokeIndex = 2;
  int32 colorIndex = 3;
}

message RasterFigure {
  RasterImage image = 1;
  fixed64 from = 2;
  fixed64 to = 3;
  float angle = 4;
  bool interpolate = 5;
}

message RectangleFigure {
  fixed64 from = 1;
  fixed64 to = 2;
  int32 strokeIndex = 3;
  int32 colorIndex = 4;
  int32 fillIndex = 5;
}

message TextFigure {
  string text = 1;
  fixed64 position = 2;
  float angle = 3;
  float anchor = 4;
  int32 fontIndex = 5;
  int32 colorIndex = 6;
}

message Figure {
  oneof kind {
    CircleFigure circle = 1;
    LineFigure line = 2;
    PathFigure path = 3;
    PolygonFigure polygon = 4;
    PolylineFigure polyline = 5;
    RasterFigure raster = 6;
    RectangleFigure rectangle = 7;
    TextFigure text = 8;
  }
}

message Layer {
  int32 viewportIndex = 1;
  int32 clippingAreaIndex = 2;
  repeated Figure figure = 3;
  bool isAxisText = 4;
}

message Plot {
  repeated Font font = 1;
  repeated int32 color = 2;
  repeated Stroke stroke = 3;
  repeated Viewport viewport = 4;
  repeated Layer layer = 5;
  int32 previewComplexity = 6;
  int32 totalComplexity = 7;
  int32 error = 8;
}

message GraphicsFetchPlotResponse {
  string message = 1;
  Plot plot = 2;
}

message ChunkParameters {
  string rmarkdownParameters = 1;
  string chunkText = 2;
}

message RepoInstallPackageRequest {
  string packageName = 1;
  string fallbackMethod = 2;
  map<string, string> arguments = 3;
}

message RepoRemovePackageRequest {
  string packageName = 1;
  string libraryPath = 2;
}

message PreviewDataImportRequest {
  string path = 1;
  string mode = 2;
  int32 rowCount = 3;
  map<string, string> options = 4;
}

message CommitDataImportRequest {
  string name = 1;
  string path = 2;
  string mode = 3;
  map<string, string> options = 4;
}

message TableColumnsInfoRequest {
  RRef ref = 1;
}

message TableColumnsInfo {
  enum TableType {
    UNKNOWN = 0;
    DPLYR = 1;
    DATA_TABLE = 2;
    DATA_FRAME = 3;
  }
  message Column {
    string name = 1;
    string type = 2;
  }
  repeated Column columns = 1;
  TableType tableType = 2;
}

message DataFrameInfoResponse {
  enum ColumnType {
    INTEGER = 0;
    DOUBLE = 1;
    BOOLEAN = 3;
    STRING = 4;
  }
  message Column {
    string name = 1;
    ColumnType type = 2;
    bool sortable = 3;
    bool isRowNames = 4;
  }
  int32 nRows = 1;
  repeated Column columns = 2;
  bool canRefresh = 3;
}

message DataFrameGetDataRequest {
  RRef ref = 1;
  int32 start = 2;
  int32 end = 3;
}

message DataFrameGetDataResponse {
  message Value {
    oneof value {
      google.protobuf.Empty na = 1;
      int32 intValue = 2;
      double doubleValue = 3;
      bool booleanValue = 4;
      string stringValue = 5;
    }
  }
  message Column {
    repeated Value values = 1;
  }
  repeated Column columns = 1;
}

message DataFrameSortRequest {
  message SortKey {
    int32 columnIndex = 1;
    bool descending = 2;
  }
  RRef ref = 1;
  repeated SortKey keys = 2;
}

message DataFrameFilterRequest {
  message Filter {
    message ComposedFilter {
      enum Type {
        AND = 0;
        OR = 1;
        NOT = 2;
      }
      Type type = 1;
      repeated Filter filters = 2;
    }
    message Operator {
      enum Type {
        EQ = 0;
        NEQ = 1;
        LESS = 2;
        GREATER = 3;
        LEQ = 4;
        GEQ = 5;
        REGEX = 6;
      }
      int32 column = 1;
      Type type = 2;
      string value = 3;
    }
    message NaFilter {
      int32 column = 1;
      bool isNa = 2;
    }
    oneof filter {
      google.protobuf.Empty true = 1;
      ComposedFilter composed = 2;
      Operator operator = 3;
      NaFilter naFilter = 4;
    }
  }
  RRef ref = 1;
  Filter filter = 2;
}

message ConvertRoxygenToHTMLRequest {
  string functionName = 1;
  string functionText = 2;
}

message ConvertRoxygenToHTMLResponse {
  oneof result {
    string text = 1;
    string error = 2;
  }
}

message UnloadLibraryRequest {
  string packageName = 1;
  bool withDynamicLibrary = 2;
}

message HttpdResponse {
  bool success = 1;
  string content = 2;
  string url = 3;
}

message DocumentationForSymbolRequest {
  string symbol = 1;
  string package = 2;
}

message SetValueRequest {
  RRef ref = 1;
  RRef value = 2;
}

message LoadEnvironmentRequest {
  string file = 1;
  // empty variable name means load into global env
  string variable = 2;
}

message RRefList {
  repeated RRef refs = 1;
}

message Int64List {
  repeated int64 list = 1;
}

message StringOrError {
  oneof result {
    string value = 1;
    string error = 2;
  }
}

message ExtraNamedArguments {
  // See org.jetbrains.r.hints.parameterInfo.RExtraNamedArgumentsInfo for details
  repeated string argNames = 1;
  repeated string funArgNames = 2;
}

message GetSysEnvRequest {
  string envName = 1;
  repeated string flags = 2;
}

message RLibraryPathList {
  message RLibraryPath {
    string path = 1;
    bool isWritable = 2;
  }

  repeated RLibraryPath libPaths = 1;
}

message RInstalledPackageList {
  message RInstalledPackage {
    message MapEntry {
      string key = 1;
      string value = 2;
    }
    enum RPackagePriority {
      BASE = 0;
      RECOMMENDED = 1;
      NA = 2;
    }
    string packageName = 1;
    string packageVersion = 2;
    RPackagePriority priority = 3;
    string libraryPath = 4;
    string canonicalPackagePath = 5;
    repeated MapEntry description = 6;
  }

  repeated RInstalledPackage packages = 1;
}

message S4ClassInfo {
  message S4ClassSlot {
    string name = 1;
    string type = 2;
  }
  string className = 1;
  string packageName = 2;
  repeated S4ClassSlot slots = 3;
  repeated string superClasses = 4;
  bool isVirtual = 5;
}

message ShortS4ClassInfoList {
  message ShortS4ClassInfo {
    string name = 1;
    string package = 2;
    bool isVirtual = 3;
  }

  repeated ShortS4ClassInfo shortS4ClassInfos = 1;
}

message R6ClassInfo {
  message R6ClassMember {
    string name = 1;
    bool isPublic = 2;
  }

  message R6ClassActiveBinding {
    string name = 1;
  }

  string className = 1;
  repeated string superClasses = 2;
  repeated R6ClassMember members = 3;
  repeated R6ClassActiveBinding activeBindings = 4;
}

message ShortR6ClassInfoList {
  message ShortR6ClassInfo {
    string name = 1;
  }

  repeated ShortR6ClassInfo shortR6ClassInfos = 1;
}